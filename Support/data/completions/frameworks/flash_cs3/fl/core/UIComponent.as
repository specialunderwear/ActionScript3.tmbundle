package fl.core
{
import flash.display.DisplayObject;
import flash.display.DisplayObjectContainer;
import flash.display.InteractiveObject;
import flash.display.Sprite;
import flash.display.Stage;
import flash.events.Event;
import flash.events.EventPhase;
import flash.events.FocusEvent;
import flash.events.KeyboardEvent;
import flash.events.MouseEvent;
import flash.geom.Rectangle;
import flash.text.TextField;
import flash.text.TextFormat;
import flash.text.TextFormatAlign;
import flash.utils.Dictionary;
import flash.utils.getDefinitionByName;
import flash.utils.getQualifiedClassName;
import flash.system.Capabilities;
import flash.system.IME;
import flash.system.IMEConversionMode;
import flash.utils.getQualifiedClassName;
import fl.core.InvalidationType;
import fl.events.ComponentEvent;
import fl.managers.FocusManager;
import fl.managers.IFocusManager;
import fl.managers.IFocusManagerComponent;
import fl.managers.StyleManager;
public class UIComponent extends Sprite
{
		public var version : String;
		public static var inCallLaterPhase : Boolean;
		public var focusTarget : IFocusManagerComponent;
		protected var isLivePreview : Boolean;
		private var tempText : TextField;
		protected var instanceStyles : Object;
		protected var sharedStyles : Object;
		protected var callLaterMethods : Dictionary;
		protected var invalidateFlag : Boolean;
		protected var _enabled : Boolean;
		protected var invalidHash : Object;
		protected var uiFocusRect : DisplayObject;
		protected var isFocused : Boolean;
		private var _focusEnabled : Boolean;
		private var _mouseFocusEnabled : Boolean;
		protected var _width : Number;
		protected var _height : Number;
		protected var _x : Number;
		protected var _y : Number;
		protected var startWidth : Number;
		protected var startHeight : Number;
		protected var _imeMode : String;
		protected var _oldIMEMode : String;
		protected var errorCaught : Boolean;
		protected var _inspector : Boolean;
		private static var defaultStyles : Object;
		private static var focusManagers : Dictionary;
		public static var createAccessibilityImplementation : Function;
		public function get componentInspectorSetting () : Boolean;
		public function set componentInspectorSetting (value:Boolean) : Void;
		public function get enabled () : Boolean;
		public function set enabled (value:Boolean) : Void;
		public function get width () : Number;
		public function set width (value:Number) : Void;
		public function get height () : Number;
		public function set height (value:Number) : Void;
		public function get x () : Number;
		public function set x (value:Number) : Void;
		public function get y () : Number;
		public function set y (value:Number) : Void;
		public function get scaleX () : Number;
		public function set scaleX (value:Number) : Void;
		public function get scaleY () : Number;
		public function set scaleY (value:Number) : Void;
		public function get visible () : Boolean;
		public function set visible (value:Boolean) : Void;
		public function get focusEnabled () : Boolean;
		public function set focusEnabled (b:Boolean) : Void;
		public function get mouseFocusEnabled () : Boolean;
		public function set mouseFocusEnabled (b:Boolean) : Void;
		public function get focusManager () : IFocusManager;
		public function set focusManager (f:IFocusManager) : Void;
		public static function getStyleDefinition () : Object;
		public static function mergeStyles (...list:Array) : Object;
		public function UIComponent ();
		protected function beforeComponentParameters () : void;
		protected function afterComponentParameters () : void;
		public function setSize (width:Number, height:Number) : void;
		public function setStyle (style:String, value:Object) : void;
		public function clearStyle (style:String) : void;
		public function getStyle (style:String) : Object;
		public function move (x:Number, y:Number) : void;
		protected function getScaleY () : Number;
		protected function setScaleY (value:Number) : void;
		protected function getScaleX () : Number;
		protected function setScaleX (value:Number) : void;
		public function validateNow () : void;
		public function invalidate (property:String =InvalidationType.ALL, callLater:Boolean =true) : void;
		public function setSharedStyle (name:String, style:Object) : void;
		public function drawFocus (focused:Boolean) : void;
		public function setFocus () : void;
		public function getFocus () : InteractiveObject;
		protected function setIMEMode (enabled:Boolean);
		public function drawNow () : void;
		protected function configUI () : void;
		protected function checkLivePreview () : Boolean;
		protected function isInvalid (property:String, ...properties:Array) : Boolean;
		protected function validate () : void;
		protected function draw () : void;
		protected function getDisplayObjectInstance (skin:Object) : DisplayObject;
		protected function getStyleValue (name:String) : Object;
		protected function copyStylesToChild (child:UIComponent, styleMap:Object) : void;
		protected function callLater (fn:Function) : void;
		private function callLaterDispatcher (event:Event) : void;
		private function initializeFocusManager () : void;
		private function addedHandler (evt:Event) : void;
		protected function createFocusManager () : void;
		protected function isOurFocus (target:DisplayObject) : Boolean;
		protected function focusInHandler (event:FocusEvent) : void;
		protected function focusOutHandler (event:FocusEvent) : void;
		protected function keyDownHandler (event:KeyboardEvent) : void;
		protected function keyUpHandler (event:KeyboardEvent) : void;
		protected function hookAccessibility (event:Event) : void;
		protected function initializeAccessibility () : void;
}
}
