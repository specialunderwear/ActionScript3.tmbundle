package fl.controls
{
import fl.controls.TextInput;
import fl.controls.TextArea;
import fl.core.InvalidationType;
import fl.core.UIComponent;
import fl.events.ComponentEvent;
import fl.managers.IFocusManager;
import fl.managers.IFocusManagerComponent;
import flash.display.DisplayObject;
import flash.events.Event;
import flash.events.TextEvent;
import flash.events.Event;
import flash.events.FocusEvent;
import flash.events.KeyboardEvent;
import flash.system.IME;
import flash.text.TextField;
import flash.text.TextFieldType;
import flash.text.TextFormat;
import flash.text.TextLineMetrics;
import flash.ui.Keyboard;
public class TextInput extends UIComponent implements IFocusManagerComponent
{
		public var textField : TextField;
		protected var _editable : Boolean;
		protected var background : DisplayObject;
		protected var _html : Boolean;
		protected var _savedHTML : String;
		private static var defaultStyles : Object;
		public static var createAccessibilityImplementation : Function;
		public function get text () : String;
		public function set text (value:String) : Void;
		public function get enabled () : Boolean;
		public function set enabled (value:Boolean) : Void;
		public function get imeMode () : String;
		public function set imeMode (value:String) : Void;
		public function get alwaysShowSelection () : Boolean;
		public function set alwaysShowSelection (value:Boolean) : Void;
		public function get editable () : Boolean;
		public function set editable (value:Boolean) : Void;
		public function get horizontalScrollPosition () : int;
		public function set horizontalScrollPosition (value:int) : Void;
		public function get maxHorizontalScrollPosition () : int;
		public function get length () : int;
		public function get maxChars () : int;
		public function set maxChars (value:int) : Void;
		public function get displayAsPassword () : Boolean;
		public function set displayAsPassword (value:Boolean) : Void;
		public function get restrict () : String;
		public function set restrict (value:String) : Void;
		public function get selectionBeginIndex () : int;
		public function get selectionEndIndex () : int;
		public function get condenseWhite () : Boolean;
		public function set condenseWhite (value:Boolean) : Void;
		public function get htmlText () : String;
		public function set htmlText (value:String) : Void;
		public function get textHeight () : Number;
		public function get textWidth () : Number;
		public static function getStyleDefinition () : Object;
		public function TextInput ();
		public function drawFocus (draw:Boolean) : void;
		public function setSelection (beginIndex:int, endIndex:int) : void;
		public function getLineMetrics (index:int) : TextLineMetrics;
		public function appendText (text:String) : void;
		protected function updateTextFieldType () : void;
		protected function handleKeyDown (event:KeyboardEvent) : void;
		protected function handleChange (event:Event) : void;
		protected function handleTextInput (event:TextEvent) : void;
		protected function setEmbedFont ();
		protected function draw () : void;
		protected function drawBackground () : void;
		protected function drawTextFormat () : void;
		protected function drawLayout () : void;
		protected function configUI () : void;
		public function setFocus () : void;
		protected function isOurFocus (target:DisplayObject) : Boolean;
		protected function focusInHandler (event:FocusEvent) : void;
		protected function focusOutHandler (event:FocusEvent) : void;
}
}
