package fl.video
{
import flash.events.*;
import flash.geom.Rectangle;
import flash.media.*;
import flash.net.*;
import flash.utils.*;
public class VideoPlayer extends Video
{
		internal static var BUFFER_EMPTY : String;
		internal static var BUFFER_FULL : String;
		internal static var BUFFER_FLUSH : String;
		protected var _state : String;
		internal var _cachedState : String;
		internal var _bufferState : String;
		internal var _sawPlayStop : Boolean;
		internal var _cachedPlayheadTime : Number;
		protected var _metadata : Object;
		protected var _registrationX : Number;
		protected var _registrationY : Number;
		protected var _registrationWidth : Number;
		protected var _registrationHeight : Number;
		internal var _startingPlay : Boolean;
		internal var _invalidSeekTime : Boolean;
		internal var _invalidSeekRecovery : Boolean;
		internal var _readyDispatched : Boolean;
		internal var _autoResizeDone : Boolean;
		internal var _lastUpdateTime : Number;
		internal var lastUpdateTimeStuckCount : Number;
		internal var _sawSeekNotify : Boolean;
		protected var _ncMgr : INCManager;
		public static var iNCManagerClass : Object;
		protected var _ns : NetStream;
		internal var _currentPos : Number;
		internal var _atEnd : Boolean;
		internal var _atEndCheckPlayhead : Number;
		protected var _streamLength : Number;
		protected var _align : String;
		protected var _scaleMode : String;
		protected var _autoPlay : Boolean;
		protected var _autoRewind : Boolean;
		protected var _contentPath : String;
		protected var _bufferTime : Number;
		protected var _isLive : Boolean;
		protected var _volume : Number;
		protected var _soundTransform : SoundTransform;
		protected var __visible : Boolean;
		internal var _hiddenForResize : Boolean;
		internal var _hiddenForResizeMetadataDelay : Number;
		internal var _hiddenRewindPlayheadTime : Number;
		protected var _videoWidth : int;
		protected var _videoHeight : int;
		internal var _prevVideoWidth : int;
		internal var _prevVideoHeight : int;
		internal var oldBounds : Rectangle;
		internal var oldRegistrationBounds : Rectangle;
		internal var _updateTimeTimer : Timer;
		internal var _updateProgressTimer : Timer;
		internal var _idleTimeoutTimer : Timer;
		internal var _autoResizeTimer : Timer;
		internal var _rtmpDoStopAtEndTimer : Timer;
		internal var _rtmpDoSeekTimer : Timer;
		internal var _httpDoSeekTimer : Timer;
		internal var _httpDoSeekCount : Number;
		internal var _finishAutoResizeTimer : Timer;
		internal var _delayedBufferingTimer : Timer;
		internal var waitingForEnough : Boolean;
		internal var baselineProgressTime : Number;
		internal var startProgressTime : Number;
		internal var totalDownloadTime : Number;
		internal var totalProgressTime : Number;
		public static const DEFAULT_UPDATE_TIME_INTERVAL : Number;
		public static const DEFAULT_UPDATE_PROGRESS_INTERVAL : Number;
		public static const DEFAULT_IDLE_TIMEOUT_INTERVAL : Number;
		internal static const AUTO_RESIZE_INTERVAL : Number;
		internal static const DEFAULT_AUTO_RESIZE_PLAYHEAD_TIMEOUT : Number;
		internal var autoResizePlayheadTimeout : Number;
		internal static const DEFAULT_AUTO_RESIZE_METADATA_DELAY_MAX : Number;
		internal var autoResizeMetadataDelayMax : Number;
		internal static const FINISH_AUTO_RESIZE_INTERVAL : Number;
		internal static const RTMP_DO_STOP_AT_END_INTERVAL : Number;
		internal static const RTMP_DO_SEEK_INTERVAL : Number;
		internal static const HTTP_DO_SEEK_INTERVAL : Number;
		internal static const DEFAULT_HTTP_DO_SEEK_MAX_COUNT : Number;
		internal var httpDoSeekMaxCount : Number;
		internal static const HTTP_DELAYED_BUFFERING_INTERVAL : Number;
		internal static const DEFAULT_LAST_UPDATE_TIME_STUCK_COUNT_MAX : int;
		internal var lastUpdateTimeStuckCountMax : int;
		internal var _cmdQueue : Array;
		public function set scaleX (xs:Number) : Void;
		public function set scaleY (ys:Number) : Void;
		public function set x (x:Number) : Void;
		public function set y (y:Number) : Void;
		public function set width (w:Number) : Void;
		public function set height (h:Number) : Void;
		public function get registrationX () : Number;
		public function set registrationX (x:Number) : Void;
		public function get registrationY () : Number;
		public function set registrationY (y:Number) : Void;
		public function get registrationWidth () : Number;
		public function set registrationWidth (w:Number) : Void;
		public function get registrationHeight () : Number;
		public function set registrationHeight (h:Number) : Void;
		public function get videoWidth () : int;
		public function get videoHeight () : int;
		public function get visible () : Boolean;
		public function set visible (v:Boolean) : Void;
		public function get align () : String;
		public function set align (s:String) : Void;
		public function get scaleMode () : String;
		public function set scaleMode (s:String) : Void;
		public function get autoRewind () : Boolean;
		public function set autoRewind (flag:Boolean) : Void;
		public function get playheadTime () : Number;
		public function set playheadTime (position:Number) : Void;
		public function get source () : String;
		public function get volume () : Number;
		public function set volume (aVol:Number) : Void;
		public function get soundTransform () : SoundTransform;
		public function set soundTransform (st:SoundTransform) : Void;
		public function get isRTMP () : Boolean;
		public function get isLive () : Boolean;
		public function get state () : String;
		public function get stateResponsive () : Boolean;
		public function get bytesLoaded () : uint;
		public function get bytesTotal () : uint;
		public function get totalTime () : Number;
		public function get bufferTime () : Number;
		public function set bufferTime (aTime:Number) : Void;
		public function get idleTimeout () : Number;
		public function set idleTimeout (aTime:Number) : Void;
		public function get playheadUpdateInterval () : Number;
		public function set playheadUpdateInterval (aTime:Number) : Void;
		public function get progressInterval () : Number;
		public function set progressInterval (aTime:Number) : Void;
		public function get ncMgr () : INCManager;
		public function get netConnection () : NetConnection;
		public function get netStream () : NetStream;
		public function get metadata () : Object;
		public function VideoPlayer (width:int = 320, height:int = 240);
		public function setSize (width:Number, height:Number) : void;
		public function setScale (scaleX:Number, scaleY:Number) : void;
		public function play (url:String =null, totalTime:Number =NaN, isLive:Boolean =false) : void;
		public function playWhenEnoughDownloaded () : void;
		public function load (url:String, totalTime:Number =NaN, isLive:Boolean =false) : void;
		internal function _load (url:String, totalTime:Number, isLive:Boolean) : void;
		public function pause () : void;
		public function stop () : void;
		public function seek (time:Number) : void;
		public function close () : void;
		internal function doUpdateTime (e:TimerEvent =null) : void;
		internal function doUpdateProgress (e:TimerEvent) : void;
		internal function checkEnoughDownloaded (curBytesLoaded:uint, curBytesTotal:uint) : void;
		internal function checkReadyForPlay (curBytesLoaded:uint, curBytesTotal:uint) : void;
		internal function rtmpNetStatus (e:NetStatusEvent) : void;
		internal function httpNetStatus (e:NetStatusEvent) : void;
		public function ncConnected () : void;
		public function ncReconnected () : void;
		internal function onMetaData (info:Object) : void;
		internal function onCuePoint (info:Object) : void;
		internal function setState (s:String, execQueued:Boolean =true) : void;
		internal function setStateFromCachedState (execQueued:Boolean =true) : void;
		internal function createINCManager () : void;
		internal function rtmpDoStopAtEnd (e:TimerEvent =null) : void;
		internal function rtmpDoSeek (e:TimerEvent) : void;
		internal function httpDoStopAtEnd () : void;
		internal function httpDoSeek (e:TimerEvent) : void;
		internal function closeNS (updateCurrentPos:Boolean =false) : void;
		internal function doDelayedBuffering (e:TimerEvent) : void;
		internal function _pause (doPause:Boolean) : void;
		internal function _play (startTime:int =0, endTime:int =-1) : void;
		internal function _seek (time:Number) : void;
		internal function isXnOK () : Boolean;
		internal function startAutoResize () : void;
		internal function doAutoResize (e:TimerEvent =null) : void;
		internal function finishAutoResize (e:TimerEvent =null) : void;
		internal function _createStream () : void;
		internal function _setUpStream () : void;
		internal function doIdleTimeout (e:TimerEvent) : void;
		internal function flushQueuedCmds () : void;
		internal function execQueuedCmds () : void;
		internal function queueCmd (type:Number, url:String =null, isLive:Boolean =false, time:Number =NaN) : void;
}
}
