package fl.video
{
import flash.display.*;
import flash.events.*;
import flash.geom.ColorTransform;
import flash.geom.Matrix;
import flash.geom.Rectangle;
import flash.net.URLRequest;
import flash.utils.*;
public class UIManager
{
		public static const PAUSE_BUTTON : int;
		public static const PLAY_BUTTON : int;
		public static const STOP_BUTTON : int;
		public static const SEEK_BAR_HANDLE : int;
		public static const SEEK_BAR_HIT : int;
		public static const BACK_BUTTON : int;
		public static const FORWARD_BUTTON : int;
		public static const FULL_SCREEN_ON_BUTTON : int;
		public static const FULL_SCREEN_OFF_BUTTON : int;
		public static const MUTE_ON_BUTTON : int;
		public static const MUTE_OFF_BUTTON : int;
		public static const VOLUME_BAR_HANDLE : int;
		public static const VOLUME_BAR_HIT : int;
		public static const NUM_BUTTONS : int;
		public static const PLAY_PAUSE_BUTTON : int;
		public static const FULL_SCREEN_BUTTON : int;
		public static const MUTE_BUTTON : int;
		public static const BUFFERING_BAR : int;
		public static const SEEK_BAR : int;
		public static const VOLUME_BAR : int;
		public static const NUM_CONTROLS : int;
		public static const NORMAL_STATE : uint;
		public static const OVER_STATE : uint;
		public static const DOWN_STATE : uint;
		internal var controls : Array;
		internal var delayedControls : Array;
		public var customClips : Array;
		public var ctrlDataDict : Dictionary;
		internal var skin_mc : Sprite;
		internal var skinLoader : Loader;
		internal var skinTemplate : Sprite;
		internal var layout_mc : Sprite;
		internal var border_mc : DisplayObject;
		internal var borderCopy : Sprite;
		internal var borderPrevRect : Rectangle;
		internal var borderScale9Rects : Array;
		internal var borderAlpha : Number;
		internal var borderColor : uint;
		internal var borderColorTransform : ColorTransform;
		internal var skinLoadDelayCount : uint;
		internal var placeholderLeft : Number;
		internal var placeholderRight : Number;
		internal var placeholderTop : Number;
		internal var placeholderBottom : Number;
		internal var videoLeft : Number;
		internal var videoRight : Number;
		internal var videoTop : Number;
		internal var videoBottom : Number;
		internal var _bufferingBarHides : Boolean;
		internal var _controlsEnabled : Boolean;
		internal var _skin : String;
		internal var _skinAutoHide : Boolean;
		internal var _skinFadingMaxTime : int;
		internal var _skinReady : Boolean;
		internal var __visible : Boolean;
		internal var _seekBarScrubTolerance : Number;
		internal var _progressPercent : Number;
		internal var cachedSoundLevel : Number;
		internal var _lastVolumePos : Number;
		internal var _isMuted : Boolean;
		internal var _volumeBarTimer : Timer;
		internal var _volumeBarScrubTolerance : Number;
		internal var _vc : FLVPlayback;
		internal var _bufferingDelayTimer : Timer;
		internal var _bufferingOn : Boolean;
		internal var _seekBarTimer : Timer;
		internal var _lastScrubPos : Number;
		internal var _playAfterScrub : Boolean;
		internal var _skinAutoHideTimer : Timer;
		internal static const SKIN_AUTO_HIDE_INTERVAL : Number;
		internal var _skinFadingTimer : Timer;
		internal static const SKIN_FADING_INTERVAL : Number;
		internal var _skinFadingIn : Boolean;
		internal var _skinFadeStartTime : int;
		internal var _skinAutoHideMotionTimeout : int;
		internal var _skinAutoHideMouseX : Number;
		internal var _skinAutoHideMouseY : Number;
		internal var _skinAutoHideLastMotionTime : int;
		internal static const SKIN_FADING_MAX_TIME_DEFAULT : Number;
		internal static const SKIN_AUTO_HIDE_MOTION_TIMEOUT_DEFAULT : Number;
		internal var mouseCaptureCtrl : int;
		internal var _fullScreen : Boolean;
		internal var _fullScreenTakeOver : Boolean;
		internal var _fullScreenBgColor : uint;
		internal var cacheStageAlign : String;
		internal var cacheStageScaleMode : String;
		internal var cacheFLVPlaybackParent : DisplayObjectContainer;
		internal var cacheFLVPlaybackIndex : int;
		internal var cacheFLVPlaybackLocation : Rectangle;
		internal var cacheSkinAutoHide : Boolean;
		public static const VOLUME_BAR_INTERVAL_DEFAULT : Number;
		public static const VOLUME_BAR_SCRUB_TOLERANCE_DEFAULT : Number;
		public static const SEEK_BAR_INTERVAL_DEFAULT : Number;
		public static const SEEK_BAR_SCRUB_TOLERANCE_DEFAULT : Number;
		public static const BUFFERING_DELAY_INTERVAL_DEFAULT : Number;
		internal static var layoutNameToIndexMappings : Object;
		internal static var layoutNameArray : Array;
		internal static var skinClassPrefixes : Array;
		internal static var customComponentClassNames : Array;
		internal static var buttonSkinLinkageIDs : Array;
		public function get bufferingBarHidesAndDisablesOthers () : Boolean;
		public function set bufferingBarHidesAndDisablesOthers (b:Boolean) : Void;
		public function get controlsEnabled () : Boolean;
		public function set controlsEnabled (flag:Boolean) : Void;
		public function get fullScreenBackgroundColor () : uint;
		public function set fullScreenBackgroundColor (c:uint) : Void;
		public function get fullScreenSkinDelay () : int;
		public function set fullScreenSkinDelay (i:int) : Void;
		public function get fullScreenTakeOver () : Boolean;
		public function set fullScreenTakeOver (v:Boolean) : Void;
		public function get skin () : String;
		public function set skin (s:String) : Void;
		public function get skinAutoHide () : Boolean;
		public function set skinAutoHide (b:Boolean) : Void;
		public function get skinBackgroundAlpha () : Number;
		public function set skinBackgroundAlpha (a:Number) : Void;
		public function get skinBackgroundColor () : uint;
		public function set skinBackgroundColor (c:uint) : Void;
		public function get skinFadeTime () : int;
		public function set skinFadeTime (i:int) : Void;
		public function get skinReady () : Boolean;
		public function get seekBarInterval () : Number;
		public function set seekBarInterval (s:Number) : Void;
		public function get volumeBarInterval () : Number;
		public function set volumeBarInterval (s:Number) : Void;
		public function get bufferingDelayInterval () : Number;
		public function set bufferingDelayInterval (s:Number) : Void;
		public function get volumeBarScrubTolerance () : Number;
		public function set volumeBarScrubTolerance (s:Number) : Void;
		public function get seekBarScrubTolerance () : Number;
		public function set seekBarScrubTolerance (s:Number) : Void;
		public function get visible () : Boolean;
		public function set visible (v:Boolean) : Void;
		public function UIManager (vc:FLVPlayback);
		internal static function initLayoutNameToIndexMappings () : void;
		internal function handleFullScreenEvent (e:FullScreenEvent) : void;
		internal function handleEvent (e:Event) : void;
		internal function handleSoundEvent (e:SoundEvent) : void;
		internal function handleLayoutEvent (e:LayoutEvent) : void;
		internal function handleIVPEvent (e:IVPEvent) : void;
		public function getControl (index:int) : Sprite;
		public function setControl (index:int, ctrl:Sprite) : void;
		internal function resetPlayPause () : void;
		internal function addButtonControl (ctrl:Sprite) : void;
		internal function handleButtonEvent (e:MouseEvent) : void;
		internal function captureMouseEvent (e:MouseEvent) : void;
		internal function handleMouseUp (e:MouseEvent) : void;
		internal function removeButtonListeners (ctrl:Sprite) : void;
		internal function downloadSkin () : void;
		internal function handleLoadErrorEvent (e:ErrorEvent) : void;
		internal function handleLoad (e:Event) : void;
		internal function finishLoad (e:Event) : void;
		internal function layoutSkin () : void;
		internal function bitmapCopyBorder () : void;
		internal function layoutControl (ctrl:DisplayObject) : void;
		internal function calcLayoutControl (ctrl:DisplayObject) : Rectangle;
		internal function removeSkin () : void;
		internal function setCustomClip (dispObj:DisplayObject) : void;
		internal function setSkin (index:int, avatar:DisplayObject) : void;
		internal function setTwoButtonHolderSkin (holderIndex:int, firstIndex:int, firstName:String, secondIndex:int, secondName:String) : Sprite;
		internal function setupButtonSkin (index:int) : Sprite;
		internal function setupButtonSkinState (ctrl:Sprite, definitionHolder:Sprite, skinName:String, defaultSkin:DisplayObject =null ) : DisplayObject;
		internal function setupBarSkinPart (ctrl:Sprite, avatar:DisplayObject, definitionHolder:Sprite, skinName:String, partName:String, required:Boolean =false) : DisplayObject;
		internal function createSkin (definitionHolder:DisplayObject, skinName:String) : DisplayObject;
		internal function skinButtonControl (ctrlOrEvent:Object) : void;
		internal function applySkinState (ctrlData:ControlData, newState:DisplayObject) : void;
		internal function addBarControl (ctrl:Sprite) : void;
		internal function finishAddBarControl (ctrlOrEvent:Object) : void;
		internal function cleanupHandle (ctrlOrEvent:Object) : void;
		internal function fixUpBar (definitionHolder:DisplayObject, propPrefix:String, ctrl:DisplayObject, name:String) : void;
		internal function calcBarMargins (ctrl:DisplayObject, type:String, symmetricMargins:Boolean) : void;
		internal static function getNumberPropSafe (obj:Object, propName:String) : Number;
		internal static function getBooleanPropSafe (obj:Object, propName:String) : Boolean;
		internal function finishAddBufferingBar (e:Event =null) : void;
		internal function positionMaskedFill (ctrl:DisplayObject, percent:Number) : void;
		internal function startHandleDrag (ctrl:Sprite) : void;
		internal function stopHandleDrag (ctrl:Sprite) : void;
		internal function positionHandle (ctrl:Sprite) : void;
		internal function positionBar (ctrl:Sprite, type:String, percent:Number) : void;
		internal function calcPercentageFromHandle (ctrl:Sprite) : void;
		internal function handleRelease (index:int) : void;
		internal function seekBarListener (e:TimerEvent) : void;
		internal function volumeBarListener (e:TimerEvent) : void;
		internal function doBufferingDelay (e:TimerEvent) : void;
		internal function dispatchMessage (index:int) : void;
		internal function setEnabledAndVisibleForState (index:int, state:String) : void;
		internal function setupSkinAutoHide (doFade:Boolean) : void;
		internal function skinAutoHideHitTest (e:TimerEvent, doFade:Boolean =true) : void;
		internal function skinFadeMore (e:TimerEvent) : void;
		internal function enterFullScreenTakeOver () : void;
		internal function exitFullScreenTakeOver () : void;
		internal function hookUpCustomComponents () : void;
}
}
